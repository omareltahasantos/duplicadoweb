{"version":3,"sources":["theme/index.js","firebase.js","context/AuthContext.js","components/PrivateRoute/index.js","screen/Dashboard/index.js","assets/logo/sm-logo-h-responsive.png","assets/logo/sm-logo-h.png","components/Layout/index.js","components/CardLink/index.js","components/Notice/index.js","screen/Home/index.js","assets/logo/logo-sm-login.png","screen/Login/LoginForm.js","screen/Login/index.js","components/AddButton/index.js","components/HourInfo/index.js","components/CancelDialog/index.js","screen/WorkHours/index.js","screen/AddHours/AddForm.js","screen/AddHours/index.js","screen/AddStartTime/AddForm.js","screen/AddStartTime/index.js","components/ProjectInfo/index.js","screen/Projects/index.js","components/Breadcrumb/index.js","components/TableSearch/index.js","screen/ProjectList/index.js","constants/Routes.js","screen/AddProject/AddForm.js","screen/AddProject/index.js","screen/UpdateProject/UpdateForm.js","screen/UpdateProject/index.js","screen/UserList/index.js","screen/AddUser/AddForm.js","screen/AddUser/index.js","screen/UpdateUsers/UpdateForm.js","screen/UpdateUsers/index.js","screen/HourList/index.js","screen/Stats/index.js","screen/InfoStats/index.js","screen/UserStats/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Fonts","styles","theme","extendTheme","fonts","heading","body","global","bg","color","a","_hover","textDecoration","h1","h2","h5","colors","brand","100","200","300","400","500","600","700","800","900","border","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserApp","firestore","database","projects","collection","hours","users","notices","auth","authCreateUser","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","loading","setLoading","email","password","signInWithEmailAndPassword","user","logout","signOut","useEffect","onAuthStateChanged","doc","uid","get","then","exists","data","id","isActive","docRef","catch","error","console","log","value","login","signup","createUserWithEmailAndPassword","Provider","PrivateRoute","Component","component","roles","rest","render","props","to","includes","role","Dashboard","Layout","isHeader","justifyContent","useMediaQuery","isLargerThanHD","history","useHistory","handleLogout","push","maxW","p","minH","flexDirection","alignItems","w","h","borderTopWidth","borderBottomWidth","borderBottomColor","borderTopColor","as","src","LogoExpanse","alt","boxSize","objectFit","LogoMinimize","borderRadius","boxShadow","colorScheme","size","onClick","IconButton","aria-label","icon","Hamburger","variant","flex","padding","borderColor","href","target","rel","ml","CardLink","title","description","RouterLink","style","cursor","m","borderWidth","mb","ArrowForward","textAlign","fontSize","Notice","name","date","WarningTwoIcon","mr","fontWeight","moment","locale","Home","setData","where","startOf","toDate","endOf","orderBy","onSnapshot","snapshot","docs","map","contractHours","format","userName","pl","isExternal","justify","mt","display","maxH","overflowX","pr","spacing","index","LoginFormSchema","yup","required","LoginForm","show","setShow","setError","handleClick","values","initialValues","validationSchema","onSubmit","setSubmitting","handlerSubmit","field","form","isInvalid","errors","touched","htmlFor","placeholder","type","autoComplete","width","ViewOff","View","isFullWidth","isLoading","isSubmitting","loadingText","status","position","right","top","Login","Logo","AddButton","route","text","direction","RouteLink","leftIcon","Add","HourInfo","state","projectName","onHandlerOpen","float","Delete","onTrigger","borderLeftWidth","borderLeftColor","InfoOutline","Calendar","CancelDialog","isOpen","cancelRef","onClose","header","leastDestructiveRef","isCentered","ref","WorkHours","setIsOpen","currentId","setCurrentId","setHours","useParams","useRef","toast","useToast","limit","userId","dateEnd","onOpenDialog","ArrowBack","noOfLines","isLoaded","hour","delete","duration","isClosable","default","positive","min","max","AddForm","latitude","longitude","update","locationEnd","goBack","isReadOnly","inputMode","step","pattern","geolocated","positionOptions","enableHighAccuracy","coords","isGeolocationAvailable","isGeolocationEnabled","add","locationStart","ProjectInfo","startDate","endDate","link","toUpperCase","Projects","setProjects","minChildWidth","project","Breadcrumb","breadcrumbs","separator","ChevronRight","breadcrumb","isCurrentPage","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","rows","length","setValue","onChange","useAsyncDebounce","undefined","pointerEvents","Search2","e","Download","tbl","document","getElementById","wsAll","XLSX","utils","table_to_sheet","wb","book_new","book_append_sheet","writeFile","bookType","exportData","TableSearch","columns","overflow","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","prepareRow","pageIndex","pageSize","maxWidth","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isNumeric","span","isSorted","isSortedDesc","TriangleDown","TriangleUp","row","getRowProps","cells","cell","getCellProps","pt","ArrowLeft","isDisabled","ChevronLeft","ArrowRight","Number","ProjectList","useMemo","Header","accessor","Cell","AiFillPieChart","Edit","filter","d","PROJECT_LIST","USERS_LIST","ROUTES","spacingX","spacingY","sortBy","key","AddProject","setUsers","UpdateForm","defaultValue","UpdateProject","setProject","UserList","sumBy","createDate","set","addUser","UpdateUsers","setUser","HourList","isOpenValide","setIsOpenValide","isOpenInValide","setIsOpenInValide","valideRef","invalideRef","horasValidadas","latitudeEnd","longitudeEnd","original","ExternalLink","mx","Check","SmallClose","whiteSpace","onCloseDialog","hoursUser","sumTotal","checkIsHighHours","Stats","InfoStats","hoursToday","o","dateDB","dateToday","month","thickness","speed","emptyColor","Object","entries","groupBy","App","admin","tecnico","path","LoginPage","exact","DashboardPage","HomePage","ProjectPage","ProjectListPage","AddProjectPage","UpdateProjectPage","UpdateUserPage","UserListPage","AddUserPage","HoursPage","HourListPage","AddHoursPage","AddStartTimePage","StatsPage","InfoStatsPage","UserStatsPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cd6596df.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\r\nimport { Global } from '@emotion/react';\r\n\r\nexport const Fonts = () => (\r\n  <Global\r\n    styles={`\r\n    @import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,500;0,600;0,700;0,800;0,900;1,500;1,600;1,700;1,800;1,900&family=Work+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\r\n      `}\r\n  />\r\n);\r\n\r\nconst fonts = {\r\n  heading: \"'Montserrat', sans-serif;\",\r\n  body: \"'Work Sans', sans-serif;\",\r\n};\r\n\r\nconst styles = {\r\n  global: {\r\n    body: {\r\n      bg: 'white',\r\n      color: 'gray.700',\r\n    },\r\n    a: {\r\n      color: 'gray.700',\r\n      _hover: {\r\n        textDecoration: 'none',\r\n      },\r\n    },\r\n    h1: {\r\n      color: 'gray.900',\r\n    },\r\n    h2: {\r\n      color: 'gray.900',\r\n    },\r\n    h5: {\r\n      color: 'gray.900',\r\n    },\r\n  },\r\n};\r\n\r\n// Colors\r\nconst colors = {\r\n  brand: {\r\n    100: '#F6FDD6',\r\n    200: '#ECFBAE',\r\n    300: '#DAF383',\r\n    400: '#C5E762',\r\n    500: '#8BB925',\r\n    600: '#8BB925',\r\n    700: '#6E9B19',\r\n    800: '#547D10',\r\n    900: '#416709',\r\n  },\r\n  border: {\r\n    100: '#eaeaea',\r\n  },\r\n};\r\n\r\nexport const theme = extendTheme({ fonts, styles, colors });\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nvar createUserApp = firebase.initializeApp(\r\n  {\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  },\r\n  'createUserApp'\r\n);\r\n\r\nconst firestore = app.firestore();\r\nexport const database = {\r\n  projects: firestore.collection('projects'),\r\n  hours: firestore.collection('hours'),\r\n  users: firestore.collection('users'),\r\n  notices: firestore.collection('notices'),\r\n};\r\nexport const auth = app.auth();\r\nexport const authCreateUser = createUserApp.auth();\r\nexport default app;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth, database, authCreateUser } from '../firebase';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return authCreateUser.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  async function login(email, password) {\r\n    const user = await auth.signInWithEmailAndPassword(email, password);\r\n    setIsLoggedIn(null);\r\n    return user;\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        database.users\r\n          .doc(user.uid)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              const data = {\r\n                uid: doc.id,\r\n                ...doc.data(),\r\n              };\r\n              if (!data.isActive) {\r\n                logout()\r\n                  .then(function (docRef) {\r\n                    setIsLoggedIn(false);\r\n                    setCurrentUser(null);\r\n                    setLoading(false);\r\n                  })\r\n                  .catch(function (error) {\r\n                    console.log(error);\r\n                  });\r\n              } else {\r\n                setCurrentUser(data);\r\n                setIsLoggedIn(true);\r\n                setLoading(false);\r\n              }\r\n            } else {\r\n              logout()\r\n                .then(function (docRef) {\r\n                  setIsLoggedIn(false);\r\n                  setCurrentUser(null);\r\n                  setLoading(false);\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            logout()\r\n              .then(function (docRef) {\r\n                setIsLoggedIn(false);\r\n                setCurrentUser(null);\r\n                setLoading(false);\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          });\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        setCurrentUser(null);\r\n        setLoading(false);\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    isLoggedIn,\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport includes from 'lodash/includes';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }) {\r\n  const { currentUser, isLoggedIn } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return isLoggedIn === null ? null : isLoggedIn === false ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : isLoggedIn === true && includes(roles, currentUser.role) ? (\r\n          <Component {...props} />\r\n        ) : isLoggedIn === true && !includes(roles, currentUser.role) ? (\r\n          <Redirect to=\"/\" />\r\n        ) : null;\r\n      }}></Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useAuth();\r\n  return (\r\n    <>\r\n      {currentUser.role === 'admin' && <Redirect to=\"/home\" />}\r\n      {currentUser.role === 'tecnico' && <Redirect to=\"/projects\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/sm-logo-h-responsive.4d9b24c2.png\";","export default __webpack_public_path__ + \"static/media/sm-logo-h.26cda2b5.png\";","import { useMediaQuery } from '@chakra-ui/react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  Button,\r\n  MenuButton,\r\n  MenuList,\r\n  IconButton,\r\n  MenuItem,\r\n  Menu,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon } from '@chakra-ui/icons';\r\nimport LogoMinimize from '../../assets/logo/sm-logo-h-responsive.png';\r\nimport LogoExpanse from '../../assets/logo/sm-logo-h.png';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Layout = ({ children, isHeader, justifyContent }) => {\r\n  const [isLargerThanHD] = useMediaQuery([\r\n    '(min-width: 48em)',\r\n    '(display-mode: browser)',\r\n  ]);\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handleLogout() {\r\n    try {\r\n      await logout();\r\n      history.push('/login');\r\n    } catch {\r\n      console.log('failed logout.');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Container maxW=\"full\" p=\"0\">\r\n        <Flex\r\n          minH=\"100vh\"\r\n          p=\"0\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\">\r\n          {isHeader && (\r\n            <Flex\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              w=\"full\"\r\n              h=\"64px\"\r\n              borderTopWidth={6}\r\n              borderBottomWidth={1}\r\n              borderBottomColor=\"border.100\"\r\n              borderTopColor=\"brand.500\">\r\n              <Flex as=\"nav\" alignItems=\"center\" w=\"full\" maxW={1280} p=\"0px 35px\">\r\n                <Flex alignItems=\"center\">\r\n                  {isLargerThanHD ? (\r\n                    <Image\r\n                      src={LogoExpanse}\r\n                      alt=\"SM logo\"\r\n                      boxSize=\"64px\"\r\n                      w={200}\r\n                      objectFit=\"contain\"\r\n                    />\r\n                  ) : (\r\n                    <Image\r\n                      src={LogoMinimize}\r\n                      alt=\"SM logo\"\r\n                      boxSize=\"64px\"\r\n                      objectFit=\"contain\"\r\n                    />\r\n                  )}\r\n                </Flex>\r\n                <Spacer />\r\n                {isLargerThanHD ? (\r\n                  <Button\r\n                    borderRadius=\"xl\"\r\n                    boxShadow=\"md\"\r\n                    colorScheme=\"red\"\r\n                    size=\"md\"\r\n                    onClick={handleLogout}>\r\n                    Cerrar sesión\r\n                  </Button>\r\n                ) : (\r\n                  <Menu>\r\n                    <MenuButton\r\n                      as={IconButton}\r\n                      aria-label=\"Options\"\r\n                      icon={<HamburgerIcon />}\r\n                      size=\"md\"\r\n                      variant=\"outline\"\r\n                    />\r\n                    <MenuList>\r\n                      <MenuItem onClick={handleLogout}>Cerrar sesión</MenuItem>\r\n                    </MenuList>\r\n                  </Menu>\r\n                )}\r\n              </Flex>\r\n            </Flex>\r\n          )}\r\n\r\n          <Flex\r\n            as=\"main\"\r\n            flex={1}\r\n            flexDirection=\"column\"\r\n            justifyContent={justifyContent}\r\n            alignItems=\"center\"\r\n            padding=\"3rem 0\"\r\n            maxW={1280}\r\n            w=\"full\">\r\n            {children}\r\n          </Flex>\r\n\r\n          <Flex\r\n            as=\"footer\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            w=\"full\"\r\n            h=\"100px\"\r\n            borderTopWidth={1}\r\n            borderColor=\"border.100\">\r\n            <Flex\r\n              as=\"a\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              href=\"https://www.sistemasmedioambientales.com/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              Copyright © 2021\r\n              <Box ml=\"4px\">\r\n                <Image\r\n                  src={LogoMinimize}\r\n                  alt=\"SM logo\"\r\n                  boxSize=\"70px\"\r\n                  objectFit=\"contain\"\r\n                />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Heading, Box, Text, Link } from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst CardLink = ({ title, description, to }) => {\r\n  return (\r\n    <Link as={RouterLink} to={to} style={{ textDecoration: 'none' }}>\r\n      <Box\r\n        p=\"6\"\r\n        cursor=\"pointer\"\r\n        m=\"4\"\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"xl\"\r\n        _hover={{ color: 'brand.600', borderColor: 'brand.600' }}>\r\n        <Heading as=\"h3\" size=\"lg\" mb=\"2\">\r\n          {title}\r\n          <ArrowForwardIcon w={6} h={6} textAlign=\"right\" ml={1} />\r\n        </Heading>\r\n        <Text fontSize=\"md\">{description}</Text>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CardLink;\r\n","import { Text, Flex, ListItem, ListIcon } from '@chakra-ui/react';\r\nimport { WarningTwoIcon } from '@chakra-ui/icons';\r\n\r\nconst Notice = ({ name, date, hours }) => {\r\n  return (\r\n    <ListItem>\r\n      <Flex flexDirection=\"row\" alignItems=\"center\">\r\n        <ListIcon as={WarningTwoIcon} color=\"red.500\" />\r\n        <Text mr=\"6px\" fontWeight={700} color=\"gray.500\">\r\n          {`${date} -`}\r\n        </Text>\r\n        <Text mr=\"6px\" fontWeight={700}>\r\n          {name}\r\n        </Text>\r\n        <Text mr=\"6px\">Superadas h. contratadas:</Text>\r\n        <Text fontWeight={700}>{hours}h</Text>\r\n      </Flex>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Heading,\r\n  Wrap,\r\n  WrapItem,\r\n  Text,\r\n  Link as LinkChakra,\r\n  Box,\r\n  List,\r\n} from '@chakra-ui/react';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport CardLink from '../../components/CardLink';\r\nimport Notice from '../../components/Notice';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    return database.notices\r\n      .where('date', '>=', moment().startOf('month').toDate())\r\n      .where('date', '<=', moment().endOf('month').toDate())\r\n      .orderBy('date', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          contractHours: doc.data().contractHours,\r\n          date: moment(doc.data().date.toDate()).format('L'),\r\n          hours: doc.data().hours,\r\n          userName: doc.data().userName,\r\n        }));\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout justifyContent=\"center\" isHeader={true}>\r\n      <Heading as=\"h1\" size=\"3xl\" textAlign=\"center\" mb={10}>\r\n        ¡Bienvenido a\r\n        <LinkChakra\r\n          pl=\"20px\"\r\n          color=\"brand.500\"\r\n          cursor=\"pointer\"\r\n          href=\"https://www.sistemasmedioambientales.com/\"\r\n          isExternal>\r\n          SM!\r\n        </LinkChakra>\r\n      </Heading>\r\n      <Text fontSize=\"2xl\" mb={10} color=\"gray.500\" textAlign=\"center\">\r\n        Elige una de las opciones:\r\n      </Text>\r\n      <Wrap justify=\"center\">\r\n        <WrapItem>\r\n          <CardLink\r\n            title=\"Campañas\"\r\n            description=\"Añade las campañas necesarias para tus proyectos.\"\r\n            to=\"/projectlist\"\r\n          />\r\n        </WrapItem>\r\n        <WrapItem>\r\n          <CardLink\r\n            title=\"Horas\"\r\n            description=\"Añade las campañas necesarias para tus proyectos.\"\r\n            to=\"/hourList\"\r\n          />\r\n        </WrapItem>\r\n        <WrapItem>\r\n          <CardLink\r\n            title=\"Usuarios\"\r\n            description=\"Añade las campañas necesarias para tus proyectos.\"\r\n            to=\"/users\"\r\n          />\r\n        </WrapItem>\r\n        <WrapItem>\r\n          <CardLink\r\n            title=\"Estadisticas\"\r\n            description=\"Añade las campañas necesarias para tus proyectos.\"\r\n            to=\"/stats\"\r\n          />\r\n        </WrapItem>\r\n      </Wrap>\r\n      <Box minH=\"200px\" mt=\"80px\">\r\n        <Heading as=\"h3\" display=\"block\" size=\"sm\" textAlign=\"center\" mb={5}>\r\n          Notificaciones\r\n        </Heading>\r\n        <Box maxH=\"170px\" overflowX=\"auto\" pl=\"40px\" pr=\"40px\">\r\n          <List spacing={3}>\r\n            {data.map((doc, index) => (\r\n              <Notice key={index} name={doc.userName} date={doc.date} hours={doc.hours} />\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/logo-sm-login.ec686af4.png\";","import { useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Button,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  CloseButton,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .email('El email no es válido')\r\n      .required('Por favor escribe tu email'),\r\n    password: yup.string().required('Por favor escribe la contraseña'),\r\n  })\r\n  .required();\r\n\r\nconst LoginForm = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const { login } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handlerSubmit(values) {\r\n    try {\r\n      await login(values.email, values.password);\r\n      history.push('/');\r\n    } catch {\r\n      console.log('Failed login.');\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          handlerSubmit(values);\r\n          setSubmitting(false);\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"email\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.email && form.touched.email}>\r\n                  <FormLabel htmlFor=\"email\">EMAIL</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    placeholder=\"someone@example.com\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"password\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.password && form.touched.password}>\r\n                  <FormLabel htmlFor=\"password\">CONTRASEÑA</FormLabel>\r\n                  <InputGroup size=\"md\">\r\n                    <Input\r\n                      {...field}\r\n                      variant=\"flushed\"\r\n                      placeholder=\"contraseñasegura1234\"\r\n                      type={show ? 'text' : 'password'}\r\n                      id=\"password\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                      <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                        {show ? <ViewOffIcon /> : <ViewIcon />}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                  {form.errors.password ? (\r\n                    <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                  ) : (\r\n                    <FormHelperText>Nunca comparta su contraseña.</FormHelperText>\r\n                  )}\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Entrando\"\r\n              type=\"submit\">\r\n              Iniciar sesión\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {error && (\r\n        <Alert status=\"error\" mt=\"30px\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>Error!</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              No se ha podido acceder. Revise sus permisos para iniciar sesión.\r\n            </AlertDescription>\r\n          </Box>\r\n          <CloseButton\r\n            position=\"absolute\"\r\n            right=\"8px\"\r\n            top=\"8px\"\r\n            onClick={() => setError(false)}\r\n          />\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useEffect } from 'react';\r\nimport { Heading, Box, Text, Flex, Container, Image } from '@chakra-ui/react';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nimport Logo from '../../assets/logo/logo-sm-login.png';\r\nimport LoginForm from './LoginForm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const { isLoggedIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push('/');\r\n    }\r\n  }, [history, isLoggedIn]);\r\n\r\n  return (\r\n    <Container maxW=\"full\" p=\"0\">\r\n      <Flex\r\n        minH=\"100vh\"\r\n        padding=\"4rem 0.5rem\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        borderTopWidth={6}\r\n        borderColor=\"brand.500\">\r\n        <Image\r\n          src={Logo}\r\n          alt=\"Picture of the author\"\r\n          boxSize=\"130px\"\r\n          objectFit=\"contain\"\r\n        />\r\n        <Box maxW=\"500px\" w=\"full\" p=\"45px 1.5rem 20px 1.5rem\">\r\n          <Heading as=\"h2\" fontSize=\"24px\" textAlign=\"center\">\r\n            ¡Bienvenido de vuelta!\r\n          </Heading>\r\n          <Text as=\"h5\" textAlign=\"center\" p=\"25px\" mb=\"15px\">\r\n            Iniciar sesión\r\n          </Text>\r\n          <LoginForm />\r\n        </Box>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Stack, Link, Button } from '@chakra-ui/react';\r\nimport { AddIcon } from '@chakra-ui/icons';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nconst AddButton = ({ route, text }) => {\r\n  return (\r\n    <Stack direction=\"row\" spacing={4}>\r\n      <Link as={RouteLink} to={route} style={{ textDecoration: 'none' }}>\r\n        <Button\r\n          leftIcon={<AddIcon w={3} h={3} />}\r\n          colorScheme=\"brand\"\r\n          variant=\"solid\"\r\n          mb=\"30px\">\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import { Box, Text, Badge, Heading, Flex, IconButton, Link } from '@chakra-ui/react';\r\nimport { CalendarIcon, DeleteIcon, InfoOutlineIcon } from '@chakra-ui/icons';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nconst HourInfo = ({ state, projectName, type, hours, date, id, onHandlerOpen }) => {\r\n  const onTrigger = (id) => {\r\n    onHandlerOpen(id);\r\n  };\r\n  return (\r\n    <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n      <Box float=\"right\">\r\n        <IconButton\r\n          colorScheme=\"red\"\r\n          aria-label=\"Search database\"\r\n          size=\"xs\"\r\n          icon={<DeleteIcon />}\r\n          onClick={() => onTrigger(id)}\r\n        />\r\n      </Box>\r\n      {state === 'validado' && (\r\n        <>\r\n          <Text as=\"span\" color=\"brand.700\">\r\n            <Badge variant=\"solid\" colorScheme=\"brand\">\r\n              VALIDADO\r\n            </Badge>\r\n          </Text>\r\n          <Box borderLeftWidth={3} borderLeftColor=\"brand.500\" mt={4} mb={4} pl={2}>\r\n            <Heading as=\"h4\" size=\"sm\">\r\n              {hours} horas\r\n            </Heading>\r\n            <Text fontSize=\"sm\">{projectName}</Text>\r\n          </Box>\r\n        </>\r\n      )}\r\n      {state === 'sin validar' && (\r\n        <>\r\n          <Text as=\"span\" color=\"brand.700\">\r\n            <Badge variant=\"solid\" colorScheme=\"purple\">\r\n              SIN VALIDAR\r\n            </Badge>\r\n          </Text>\r\n          <Box borderLeftWidth={3} borderLeftColor=\"purple.500\" mt={4} mb={4} pl={2}>\r\n            <Heading as=\"h4\" size=\"sm\">\r\n              {hours} horas\r\n            </Heading>\r\n            <Text fontSize=\"sm\">{projectName}</Text>\r\n          </Box>\r\n        </>\r\n      )}\r\n      {state === 'denegado' && (\r\n        <>\r\n          <Text as=\"span\" color=\"brand.700\">\r\n            <Badge variant=\"solid\" colorScheme=\"red\">\r\n              DENEGADO\r\n            </Badge>\r\n          </Text>\r\n          <Box borderLeftWidth={3} borderLeftColor=\"red.500\" mt={4} mb={4} pl={2}>\r\n            <Heading as=\"h4\" size=\"sm\">\r\n              {hours} horas\r\n            </Heading>\r\n            <Text fontSize=\"sm\">{projectName}</Text>\r\n          </Box>\r\n        </>\r\n      )}\r\n      {state === 'inicio jornada' && (\r\n        <Link\r\n          as={RouteLink}\r\n          to={`/addHours/${id}/${projectName}`}\r\n          style={{ textDecoration: 'none' }}>\r\n          <Text as=\"span\" color=\"brand.700\">\r\n            <Badge variant=\"solid\" colorScheme=\"cyan\">\r\n              INICIO JORNADA\r\n            </Badge>\r\n          </Text>\r\n          <Box borderLeftWidth={3} borderLeftColor=\"cyan.500\" mt={4} mb={4} pl={2}>\r\n            <Heading as=\"h4\" size=\"sm\">\r\n              {date}\r\n            </Heading>\r\n            <Text fontSize=\"sm\">{projectName}</Text>\r\n          </Box>\r\n          <Flex flexDirection=\"row\" justifyContent=\"start\" alignItems=\"center\">\r\n            <Box>\r\n              <InfoOutlineIcon />\r\n              <Text as=\"span\" fontSize=\"xs\" ml=\"4px\">\r\n                Hay que imputar las horas finales en el mismo dia.\r\n              </Text>\r\n            </Box>\r\n          </Flex>\r\n        </Link>\r\n      )}\r\n\r\n      {state !== 'inicio jornada' ? (\r\n        <Flex flexDirection=\"row\" justifyContent=\"start\" alignItems=\"center\">\r\n          <Box>\r\n            <CalendarIcon />\r\n            <Text as=\"span\" fontSize=\"xs\" ml=\"4px\">\r\n              {date} - {type}\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HourInfo;\r\n","import {\r\n  AlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  Button,\r\n} from '@chakra-ui/react';\r\n\r\nconst CancelDialog = ({ isOpen, cancelRef, onClose, onSubmit, header, body, type }) => {\r\n  return (\r\n    <AlertDialog\r\n      isOpen={isOpen}\r\n      leastDestructiveRef={cancelRef}\r\n      onClose={onClose}\r\n      isCentered>\r\n      <AlertDialogOverlay>\r\n        {type === 'delete' && (\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              {header}\r\n            </AlertDialogHeader>\r\n            <AlertDialogBody>{body}</AlertDialogBody>\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancelar\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={onSubmit} ml={3}>\r\n                Eliminar\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        )}\r\n        {type === 'valide' && (\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              {header}\r\n            </AlertDialogHeader>\r\n            <AlertDialogBody>{body}</AlertDialogBody>\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancelar\r\n              </Button>\r\n              <Button colorScheme=\"brand\" onClick={onSubmit} ml={3}>\r\n                Validar\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        )}\r\n        {type === 'invalide' && (\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              {header}\r\n            </AlertDialogHeader>\r\n            <AlertDialogBody>{body}</AlertDialogBody>\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancelar\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={onSubmit} ml={3}>\r\n                Denegar\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        )}\r\n      </AlertDialogOverlay>\r\n    </AlertDialog>\r\n  );\r\n};\r\n\r\nexport default CancelDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Heading, Box, Text, SkeletonText, Flex, Link } from '@chakra-ui/react';\r\nimport { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { database } from '../../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport AddButton from '../../components/AddButton';\r\nimport HourInfo from '../../components/HourInfo';\r\nimport CancelDialog from '../../components/CancelDialog';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst WorkHours = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const [hours, setHours] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let { id, name } = useParams();\r\n  const { currentUser } = useAuth();\r\n  const cancelRef = React.useRef();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    return database.hours\r\n      .where('projectId', '==', id)\r\n      .where('userId', '==', currentUser.uid)\r\n      .orderBy('date', 'desc')\r\n      .limit(30)\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          userId: doc.data().userId,\r\n          userName: doc.data().userName,\r\n          projectId: doc.data().projectId,\r\n          projectName: doc.data().projectName,\r\n          state: doc.data().state,\r\n          hours: doc.data().hours ? doc.data().hours : '',\r\n          type: doc.data().type ? doc.data().type : '',\r\n          date: doc.data().date ? moment(doc.data().date.toDate()).format('L') : '',\r\n          dateEnd: doc.data().dateEnd\r\n            ? moment(doc.data().dateEnd.toDate()).format('L')\r\n            : '',\r\n        }));\r\n        setHours(data);\r\n        setLoading(false);\r\n      });\r\n  }, [id, currentUser]);\r\n\r\n  const onOpenDialog = (id) => {\r\n    setCurrentId(id);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onCloseDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    if (currentId) {\r\n      database.hours\r\n        .doc(currentId)\r\n        .delete()\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Horas eliminadas.',\r\n            description: 'Horas eliminadas correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido eliminar las horas.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Link as={RouteLink} to=\"/projects\" style={{ textDecoration: 'none' }}>\r\n          <Flex flexDirection=\"row\" alignItems=\"center\">\r\n            <ArrowBackIcon aria-label=\"Back button\" mr=\"8px\" bg=\"white\" fontSize=\"20px\" />\r\n            <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n              Horas\r\n            </Heading>\r\n          </Flex>\r\n        </Link>\r\n        <Text as=\"h5\" textAlign=\"left\" mt=\"10px\" mb=\"30px\">\r\n          Organiza las horas trabajadas\r\n        </Text>\r\n        <AddButton route={`/workStart/${id}/${name}`} text=\"Iniciar jornada\" />\r\n        {!loading ? (\r\n          hours.map((hour, index) => (\r\n            <HourInfo\r\n              state={hour.state}\r\n              projectName={hour.projectName}\r\n              type={hour.type}\r\n              hours={hour.hours}\r\n              date={hour.date}\r\n              id={hour.id}\r\n              key={index}\r\n              onHandlerOpen={onOpenDialog}\r\n            />\r\n          ))\r\n        ) : (\r\n          <>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n      <CancelDialog\r\n        isOpen={isOpen}\r\n        cancelRef={cancelRef}\r\n        onClose={() => onCloseDialog()}\r\n        onSubmit={handlerDelete}\r\n        header=\"Eliminar horas\"\r\n        body=\"¿Estás seguro? No puede deshacer esta acción después.\"\r\n        type=\"delete\"\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default WorkHours;\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Button,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { database } from '../../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    userName: yup.string().required('Por favor escribe tu nombre.'),\r\n    projectName: yup\r\n      .string()\r\n      .required('Por favor escribe la campaña en la que participas.'),\r\n    dateEnd: yup.date().default(function () {\r\n      return moment().format('yyyy-MM-DD');\r\n    }),\r\n    hours: yup\r\n      .number('Por favor escriba un numero.')\r\n      .required('Por favor escribe las horas realizadas.')\r\n      .positive('Por favor no entres numeros negativos.')\r\n      .min(0, 'Por favor escribe un numero superior a 0.')\r\n      .max(24, 'Por favor no escribas más de 24h en una jornada laboral.'),\r\n    type: yup.string().required('Por favor selecciona una de las opciones.'),\r\n  })\r\n  .required();\r\n\r\nconst AddForm = ({ latitude, longitude }) => {\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let { id, name } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          userName: currentUser.name,\r\n          projectName: name,\r\n          dateEnd: moment().format('yyyy-MM-DD'),\r\n          hours: 0,\r\n          type: '',\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          database.hours\r\n            .doc(id)\r\n            .update({\r\n              state: 'sin validar',\r\n              hours: values.hours,\r\n              type: values.type,\r\n              dateEnd: moment().toDate(),\r\n              locationEnd: {\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n              },\r\n            })\r\n            .then(function (docRef) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Imputación creada.',\r\n                description: 'Imputación de horas correcta!',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              history.goBack();\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido realizar la operación.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              setSubmitting(false);\r\n            });\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"userName\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.userName && form.touched.userName}>\r\n                  <FormLabel htmlFor=\"userName\">NOMBRE</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    value={form.initialValues.userName}\r\n                    isReadOnly\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Lebron James\"\r\n                    id=\"userName\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.userName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"projectName\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.projectName && form.touched.projectName}>\r\n                  <FormLabel htmlFor=\"projectName\">CAMPAÑA</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    value={form.initialValues.projectName}\r\n                    isReadOnly\r\n                    variant=\"flushed\"\r\n                    placeholder=\"EMT campaña\"\r\n                    id=\"projectName\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.projectName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"dateEnd\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.dateEnd && form.touched.dateEnd}>\r\n                  <FormLabel htmlFor=\"dateEnd\">FECHA</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    {...field}\r\n                    isReadOnly\r\n                    variant=\"flushed\"\r\n                    id=\"dateEnd\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.dateEnd}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"hours\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.hours && form.touched.hours}>\r\n                  <FormLabel htmlFor=\"hours\">HORAS REALIZADAS</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    type=\"number\"\r\n                    inputMode=\"decimal\"\r\n                    variant=\"flushed\"\r\n                    step=\"0.01\"\r\n                    pattern=\"[0-9]+([\\.,][0-9]+)?\"\r\n                    id=\"hours\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.hours}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"type\">\r\n              {({ field, form }) => (\r\n                <FormControl mt=\"20px\" isInvalid={form.errors.type && form.touched.type}>\r\n                  <FormLabel htmlFor=\"type\">TIPO</FormLabel>\r\n                  <Select\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    id=\"type\"\r\n                    placeholder=\"Selecciona un tipo\">\r\n                    <option value=\"Normal (L-D)\">Normal (L-D)</option>\r\n                    <option value=\"Nocturna\">Nocturna</option>\r\n                    <option value=\"Festiva\">Festiva</option>\r\n                  </Select>\r\n                  {form.errors.type ? (\r\n                    <FormErrorMessage>{form.errors.type}</FormErrorMessage>\r\n                  ) : null}\r\n                  <FormHelperText>Elija el tipo de hora que ha realizado.</FormHelperText>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport { Heading, Box, Link, Flex, Text, Spinner, Center } from '@chakra-ui/react';\r\nimport { geolocated } from 'react-geolocated';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport AddForm from './AddForm';\r\nimport { ArrowBackIcon } from '@chakra-ui/icons';\r\n\r\nconst AddHours = ({ coords, isGeolocationAvailable, isGeolocationEnabled }) => {\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      {!isGeolocationAvailable ? (\r\n        <Center h=\"150px\">\r\n          <Text>Su navegador no admite Geolocalización</Text>\r\n        </Center>\r\n      ) : !isGeolocationEnabled ? (\r\n        <Center h=\"150px\">\r\n          <Text>La geolocalización no está habilitada</Text>\r\n        </Center>\r\n      ) : coords ? (\r\n        <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n          <Link as={RouteLink} to=\"/projects\" style={{ textDecoration: 'none' }}>\r\n            <Flex flexDirection=\"row\" alignItems=\"center\">\r\n              <ArrowBackIcon\r\n                aria-label=\"Back button\"\r\n                mr=\"8px\"\r\n                bg=\"white\"\r\n                fontSize=\"20px\"\r\n              />\r\n              <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n                Añadir horas\r\n              </Heading>\r\n            </Flex>\r\n          </Link>\r\n          <Text as=\"h5\" textAlign=\"left\" mt=\"10px\" mb=\"40px\">\r\n            Imputa las horas que has realizado\r\n          </Text>\r\n          <Box w=\"full\">\r\n            <AddForm latitude={coords.latitude} longitude={coords.longitude} />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Center h=\"150px\">\r\n          <Spinner color=\"brand.500\" mr=\"15px\" />\r\n          <Text>Obteniendo los datos de ubicación...</Text>\r\n        </Center>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: true,\r\n  },\r\n})(AddHours);\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n} from '@chakra-ui/react';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { database } from '../../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    userName: yup.string().required('Por favor escribe tu nombre.'),\r\n    projectName: yup\r\n      .string()\r\n      .required('Por favor escribe la campaña en la que participas.'),\r\n    date: yup.date().default(function () {\r\n      return moment().format('yyyy-MM-DD');\r\n    }),\r\n  })\r\n  .required();\r\n\r\nconst AddForm = ({ latitude, longitude }) => {\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  let { id, name } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          userName: currentUser.name,\r\n          projectName: name,\r\n          date: moment().format('yyyy-MM-DD'),\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          database.hours\r\n            .add({\r\n              userId: currentUser.uid,\r\n              userName: values.userName,\r\n              projectId: id,\r\n              projectName: values.projectName,\r\n              state: 'inicio jornada',\r\n              date: moment().toDate(),\r\n              contractHours: currentUser.hours,\r\n              locationStart: {\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n              },\r\n            })\r\n            .then(function (docRef) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Jornada iniciada.',\r\n                description: 'Jornada iniciada correctamente!',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              history.goBack();\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido realizar la operación.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              setSubmitting(false);\r\n            });\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"userName\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.userName && form.touched.userName}>\r\n                  <FormLabel htmlFor=\"userName\">NOMBRE</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    value={form.initialValues.userName}\r\n                    isReadOnly\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Nombre técnico/a\"\r\n                    id=\"userName\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.userName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"projectName\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.projectName && form.touched.projectName}>\r\n                  <FormLabel htmlFor=\"projectName\">CAMPAÑA</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    value={form.initialValues.projectName}\r\n                    isReadOnly\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Campaña X\"\r\n                    id=\"projectName\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.projectName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"date\">\r\n              {({ field, form }) => (\r\n                <FormControl mt=\"20px\" isInvalid={form.errors.date && form.touched.date}>\r\n                  <FormLabel htmlFor=\"date\">FECHA</FormLabel>\r\n                  <Input type=\"date\" {...field} isReadOnly variant=\"flushed\" id=\"date\" />\r\n                  <FormErrorMessage>{form.errors.date}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Iniciar jornada\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport { Heading, Box, Link, Flex, Text, Spinner, Center } from '@chakra-ui/react';\r\nimport { geolocated } from 'react-geolocated';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport AddForm from './AddForm';\r\nimport { ArrowBackIcon } from '@chakra-ui/icons';\r\n\r\nconst AddStartTime = ({ coords, isGeolocationAvailable, isGeolocationEnabled }) => {\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      {!isGeolocationAvailable ? (\r\n        <Center h=\"150px\">\r\n          <Text>Su navegador no admite Geolocalización</Text>\r\n        </Center>\r\n      ) : !isGeolocationEnabled ? (\r\n        <Center h=\"150px\">\r\n          <Text>La geolocalización no está habilitada</Text>\r\n        </Center>\r\n      ) : coords ? (\r\n        <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n          <Link as={RouteLink} to=\"/projects\" style={{ textDecoration: 'none' }}>\r\n            <Flex flexDirection=\"row\" alignItems=\"center\">\r\n              <ArrowBackIcon\r\n                aria-label=\"Back button\"\r\n                mr=\"8px\"\r\n                bg=\"white\"\r\n                fontSize=\"20px\"\r\n              />\r\n              <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n                Añadir horas\r\n              </Heading>\r\n            </Flex>\r\n          </Link>\r\n          <Text as=\"h5\" textAlign=\"left\" mt=\"10px\" mb=\"40px\">\r\n            Inicia la jornada de trabajo\r\n          </Text>\r\n          <Box w=\"full\">\r\n            <AddForm latitude={coords.latitude} longitude={coords.longitude} />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Center h=\"150px\">\r\n          <Spinner color=\"brand.500\" mr=\"15px\" />\r\n          <Text>Obteniendo los datos de ubicación...</Text>\r\n        </Center>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: true,\r\n  },\r\n})(AddStartTime);\r\n","import { Link, Box, Text, Divider, Heading, Flex } from '@chakra-ui/react';\r\nimport { CalendarIcon } from '@chakra-ui/icons';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nconst ProjectInfo = ({ state, name, description, startDate, endDate, link, id }) => {\r\n  return (\r\n    <Link as={RouteLink} to={`${link}/${id}/${name}`} style={{ textDecoration: 'none' }}>\r\n      <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n        <Text as=\"span\" color={state === 'En activo' ? 'brand.700' : 'red.500'}>\r\n          {state.toUpperCase()}\r\n        </Text>\r\n        <Divider />\r\n        <Box\r\n          borderLeftWidth={3}\r\n          borderLeftColor={state === 'En activo' ? 'brand.700' : 'red.500'}\r\n          mt={4}\r\n          mb={4}\r\n          pl={2}>\r\n          <Heading as=\"h4\" size=\"sm\">\r\n            {name}\r\n          </Heading>\r\n          <Text fontSize=\"sm\">{description}</Text>\r\n        </Box>\r\n        <Flex flexDirection=\"row\" justifyContent=\"start\" alignItems=\"center\">\r\n          <Box>\r\n            <CalendarIcon />\r\n            <Text as=\"span\" fontSize=\"xs\" ml=\"4px\">\r\n              {startDate} - {endDate}\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProjectInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Text,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  SimpleGrid,\r\n  Divider,\r\n  SkeletonText,\r\n} from '@chakra-ui/react';\r\nimport { database } from '../../firebase';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport ProjectInfo from '../../components/ProjectInfo';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst Projects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    database.projects\r\n      .where('users', 'array-contains', currentUser.uid)\r\n      .orderBy('startDate', 'desc')\r\n      .limit(15)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          startDate: doc.data().startDate,\r\n          endDate: doc.data().endDate,\r\n          description: doc.data().description,\r\n          name: doc.data().name,\r\n          users: doc.data().users,\r\n        }));\r\n        setProjects(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [currentUser.uid]);\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Campañas\r\n        </Heading>\r\n        <Text as=\"h5\" textAlign=\"left\" mt=\"10px\" mb=\"30px\">\r\n          Selecciona la campaña a la que quieras imputar horas\r\n        </Text>\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Horas contratadas</StatLabel>\r\n              <StatNumber>{`${currentUser.hours}h/mes`}</StatNumber>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Precio por hora</StatLabel>\r\n              <StatNumber fontSize=\"md\">\r\n                <Text as=\"span\" fontWeight=\"400\" color=\"gray.900\" fontSize=\"md\" mr=\"8px\">\r\n                  Normal (L-D)\r\n                </Text>\r\n                7€ brutos/hora\r\n              </StatNumber>\r\n              <StatNumber fontSize=\"md\">\r\n                <Text as=\"span\" fontWeight=\"400\" color=\"gray.900\" fontSize=\"md\" mr=\"8px\">\r\n                  Festiva\r\n                </Text>\r\n                8€ brutos/hora\r\n              </StatNumber>\r\n              <StatNumber fontSize=\"md\">\r\n                <Text as=\"span\" fontWeight=\"400\" color=\"gray.900\" fontSize=\"md\" mr=\"8px\">\r\n                  Nocturna\r\n                </Text>\r\n                10€ brutos/hora\r\n              </StatNumber>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Divider mt=\"30px\" mb=\"30px\" borderBottomWidth={3} borderColor=\"brand.500\" />\r\n        {!loading ? (\r\n          projects.map((project, index) =>\r\n            moment().toDate() >= moment(project.startDate.toDate()) &&\r\n            moment().toDate() <= moment(project.endDate.toDate()) ? (\r\n              <ProjectInfo\r\n                state=\"En activo\"\r\n                name={project.name}\r\n                description={project.description}\r\n                startDate={moment(project.startDate.toDate()).format('L')}\r\n                endDate={moment(project.endDate.toDate()).format('L')}\r\n                link=\"/hours\"\r\n                id={project.id}\r\n                key={index}\r\n              />\r\n            ) : null\r\n          )\r\n        ) : (\r\n          <>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import {\r\n  Breadcrumb as BreadcrumbChakra,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n} from '@chakra-ui/react';\r\nimport { ChevronRightIcon } from '@chakra-ui/icons';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nconst Breadcrumb = ({ breadcrumbs }) => {\r\n  return (\r\n    <BreadcrumbChakra\r\n      spacing=\"8px\"\r\n      separator={<ChevronRightIcon color=\"gray.500\" />}\r\n      mt=\"15px\"\r\n      mb=\"30px\">\r\n      {breadcrumbs.map((breadcrumb, index) => (\r\n        <BreadcrumbItem isCurrentPage={breadcrumb.isCurrentPage} key={index}>\r\n          <BreadcrumbLink as={RouteLink} to={breadcrumb.href}>\r\n            {breadcrumb.title}\r\n          </BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n      ))}\r\n    </BreadcrumbChakra>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Input,\r\n  IconButton,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  chakra,\r\n  Tbody,\r\n  Td,\r\n  Flex,\r\n  Stack,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport {\r\n  TriangleDownIcon,\r\n  TriangleUpIcon,\r\n  Search2Icon,\r\n  ChevronRightIcon,\r\n  ArrowLeftIcon,\r\n  ChevronLeftIcon,\r\n  ArrowRightIcon,\r\n  DownloadIcon,\r\n} from '@chakra-ui/icons';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from 'react-table';\r\nimport XLSX from 'xlsx';\r\n\r\nfunction GlobalFilter({ preGlobalFilteredRows, globalFilter, setGlobalFilter, rows }) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  const exportData = () => {\r\n    var tbl = document.getElementById('tableReact');\r\n    const wsAll = XLSX.utils.table_to_sheet(tbl);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, wsAll, 'ExportSheet');\r\n    XLSX.writeFile(wb, `export-sheet.xlsx`, { bookType: 'xlsx' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text mb=\"8px\">Buscar:</Text>\r\n      <InputGroup mb=\"30px\">\r\n        <InputLeftElement\r\n          pointerEvents=\"none\"\r\n          color=\"gray.300\"\r\n          fontSize=\"1.2em\"\r\n          children={<Search2Icon />}\r\n        />\r\n        <Input\r\n          placeholder={`${count} registros...`}\r\n          value={value || ''}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n        />\r\n        <IconButton\r\n          ml=\"8px\"\r\n          colorScheme=\"brand\"\r\n          aria-label=\"Search database\"\r\n          icon={<DownloadIcon />}\r\n          onClick={() => exportData(rows)}\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nconst TableSearch = ({ data, columns, overflow }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    rows,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    prepareRow,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = useTable({ columns, data }, useGlobalFilter, useSortBy, usePagination);\r\n\r\n  return (\r\n    <>\r\n      <Divider mt=\"30px\" mb=\"30px\" borderBottomWidth={3} borderColor=\"brand.500\" />\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n        rows={rows}\r\n      />\r\n      <Table\r\n        {...getTableProps()}\r\n        variant=\"striped\"\r\n        colorScheme=\"gray\"\r\n        id=\"tableReact\"\r\n        style={\r\n          overflow\r\n            ? {\r\n                maxWidth: '1210px',\r\n                width: '1210px',\r\n                display: 'block',\r\n                overflowX: 'auto',\r\n              }\r\n            : null\r\n        }>\r\n        <Thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <Tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <Th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  isNumeric={column.isNumeric}>\r\n                  {column.render('Header')}\r\n                  <chakra.span pl=\"4\">\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <TriangleDownIcon aria-label=\"sorted descending\" />\r\n                      ) : (\r\n                        <TriangleUpIcon aria-label=\"sorted ascending\" />\r\n                      )\r\n                    ) : null}\r\n                  </chakra.span>\r\n                </Th>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </Thead>\r\n        <Tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <Tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <Td\r\n                    {...cell.getCellProps()}\r\n                    isNumeric={cell.column.isNumeric}\r\n                    style={cell.column.style}>\r\n                    <Text>{cell.render('Cell')}</Text>\r\n                  </Td>\r\n                ))}\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Flex flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" pt={4}>\r\n        <Flex flex={1} alignItems=\"center\">\r\n          <IconButton\r\n            variant=\"outline\"\r\n            colorScheme=\"gray\"\r\n            aria-label=\"Call Sage\"\r\n            fontSize=\"20px\"\r\n            icon={<ArrowLeftIcon />}\r\n            onClick={() => gotoPage(0)}\r\n            isDisabled={!canPreviousPage}\r\n            mr=\"8px\"\r\n          />\r\n          <IconButton\r\n            variant=\"outline\"\r\n            colorScheme=\"gray\"\r\n            aria-label=\"Call Sage\"\r\n            fontSize=\"20px\"\r\n            icon={<ChevronLeftIcon />}\r\n            onClick={() => previousPage()}\r\n            isDisabled={!canPreviousPage}\r\n            mr=\"8px\"\r\n          />\r\n          <IconButton\r\n            variant=\"outline\"\r\n            colorScheme=\"gray\"\r\n            aria-label=\"Call Sage\"\r\n            fontSize=\"20px\"\r\n            icon={<ChevronRightIcon />}\r\n            onClick={() => nextPage()}\r\n            isDisabled={!canNextPage}\r\n            mr=\"8px\"\r\n          />\r\n          <IconButton\r\n            variant=\"outline\"\r\n            colorScheme=\"gray\"\r\n            aria-label=\"Call Sage\"\r\n            fontSize=\"20px\"\r\n            icon={<ArrowRightIcon />}\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            isDisabled={!canNextPage}\r\n            mr=\"16px\"\r\n          />\r\n          <Box as=\"span\">\r\n            Page{' '}\r\n            <Box as=\"strong\">\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </Box>{' '}\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Stack spacing={3}>\r\n          <Select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}>\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Mostrar {pageSize}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Stack>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableSearch;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  SimpleGrid,\r\n  Link,\r\n  IconButton,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport filter from 'lodash/filter';\r\nimport { database } from '../../firebase';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\nimport { AiFillPieChart } from 'react-icons/ai';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport AddButton from '../../components/AddButton';\r\nimport CancelDialog from '../../components/CancelDialog';\r\nimport TableSearch from '../../components/TableSearch';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Campañas',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst ProjectList = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const [data, setData] = useState([]);\r\n  const cancelRef = React.useRef();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    return database.projects.orderBy('startDate', 'desc').onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        startDate: doc.data().startDate,\r\n        endDate: doc.data().endDate,\r\n        description: doc.data().description,\r\n        name: doc.data().name,\r\n        users: doc.data().users,\r\n      }));\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n        style: {\r\n          maxWidth: '230px',\r\n        },\r\n      },\r\n      {\r\n        Header: 'Descripción',\r\n        accessor: 'description',\r\n        style: {\r\n          maxWidth: '230px',\r\n        },\r\n      },\r\n      {\r\n        Header: 'Fecha inicio',\r\n        accessor: (row) => moment(row.startDate.toDate()).format('L'),\r\n      },\r\n      {\r\n        Header: 'Fecha final',\r\n        accessor: (row) => moment(row.endDate.toDate()).format('L'),\r\n      },\r\n      {\r\n        Header: 'Actions',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <>\r\n            <Link\r\n              as={RouteLink}\r\n              to={`/infoStats/${value}`}\r\n              style={{ textDecoration: 'none' }}>\r\n              <IconButton\r\n                colorScheme=\"purple\"\r\n                aria-label=\"Search database\"\r\n                size=\"sm\"\r\n                mr=\"4px\"\r\n                icon={<Icon as={AiFillPieChart} />}\r\n              />\r\n            </Link>\r\n            <Link\r\n              as={RouteLink}\r\n              to={`/updateProject/${value}`}\r\n              style={{ textDecoration: 'none' }}>\r\n              <IconButton\r\n                colorScheme=\"blue\"\r\n                aria-label=\"Search database\"\r\n                size=\"sm\"\r\n                mr=\"4px\"\r\n                icon={<EditIcon />}\r\n              />\r\n            </Link>\r\n            <IconButton\r\n              colorScheme=\"red\"\r\n              aria-label=\"Search database\"\r\n              size=\"sm\"\r\n              icon={<DeleteIcon />}\r\n              onClick={() => onOpenDialog(value)}\r\n            />\r\n          </>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const onOpenDialog = (id) => {\r\n    setCurrentId(id);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onCloseDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    if (currentId) {\r\n      database.projects\r\n        .doc(currentId)\r\n        .delete()\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Campaña eliminada.',\r\n            description: 'Campaña eliminada correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido eliminar la campaña.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Campañas\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <AddButton route=\"/addProject\" text=\"Añadir campaña\" />\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total campañas</StatLabel>\r\n              <StatNumber>{data ? data.length : null}</StatNumber>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>En activo</StatLabel>\r\n              <StatNumber>\r\n                {data\r\n                  ? filter(data, function (d) {\r\n                      return (\r\n                        moment().toDate() >= moment(d.startDate.toDate()) &&\r\n                        moment().toDate() <= moment(d.endDate.toDate())\r\n                      );\r\n                    }).length\r\n                  : null}\r\n              </StatNumber>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <TableSearch data={data} columns={columns} />\r\n        <CancelDialog\r\n          isOpen={isOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={onCloseDialog}\r\n          onSubmit={handlerDelete}\r\n          header=\"Eliminar campaña\"\r\n          body=\"¿Estás seguro? No puede deshacer esta acción después.\"\r\n          type=\"delete\"\r\n        />\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","/* Page Routes */\r\nexport const HOME = '/home';\r\nexport const PROJECT_LIST = '/projectlist';\r\nexport const HOUR_LIST = '/hourlist';\r\nexport const USERS_LIST = '/users';\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  FormHelperText,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n} from '@chakra-ui/react';\r\nimport sortBy from 'lodash/sortBy';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport * as ROUTES from '../../constants/Routes';\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    name: yup.string().required('Por favor escribe el nombre de la campaña.'),\r\n    description: yup.string().required('Por favor escribe una breve descripción.'),\r\n    startDate: yup\r\n      .date()\r\n      .default(function () {\r\n        return moment().format('yyyy-MM-DD');\r\n      })\r\n      .required('Por favor escribe la fecha de inicio.'),\r\n    endDate: yup\r\n      .date()\r\n      .default(function () {\r\n        return moment().format('yyyy-MM-DD');\r\n      })\r\n      .required('Por favor escribe la fecha de finalización.'),\r\n    users: yup.array(),\r\n  })\r\n  .required();\r\n\r\nconst AddForm = ({ users }) => {\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          description: '',\r\n          startDate: moment().format('yyyy-MM-DD'),\r\n          endDate: moment().format('yyyy-MM-DD'),\r\n          users: users,\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          database.projects\r\n            .add({\r\n              name: values.name,\r\n              description: values.description,\r\n              startDate: moment(values.startDate).toDate(),\r\n              endDate: moment(values.endDate).toDate(),\r\n              users: values.users,\r\n            })\r\n            .then(function (docRef) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Campaña creada.',\r\n                description: 'Campaña creada correctamente!',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              history.push(ROUTES.PROJECT_LIST);\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido crear la campaña.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              setSubmitting(false);\r\n            });\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"name\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                  <FormLabel htmlFor=\"name\">NOMBRE</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Campaña x\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"description\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  isInvalid={form.errors.description && form.touched.description}\r\n                  mt=\"20px\">\r\n                  <FormLabel htmlFor=\"description\">DESCRIPCION</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Descripción corta...\"\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                  />\r\n                  {form.errors.password ? (\r\n                    <FormErrorMessage>{form.errors.description}</FormErrorMessage>\r\n                  ) : (\r\n                    <FormHelperText>Descripción corta de la campaña.</FormHelperText>\r\n                  )}\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <SimpleGrid\r\n              columns={2}\r\n              minChildWidth={250}\r\n              spacingX=\"40px\"\r\n              spacingY=\"20px\"\r\n              mt=\"20px\">\r\n              <Box>\r\n                <Field name=\"startDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.startDate && form.touched.startDate}>\r\n                      <FormLabel htmlFor=\"startDate\">FECHA DE INICIO</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"EMT campaña\"\r\n                        type=\"date\"\r\n                        id=\"startDate\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.startDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"endDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.endDate && form.touched.endDate}>\r\n                      <FormLabel htmlFor=\"endDate\">FECHA DE FINALIZACIÓN</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"EMT campaña\"\r\n                        type=\"date\"\r\n                        id=\"endDate\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.endDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n            </SimpleGrid>\r\n            <Field name=\"users\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.users && form.touched.users}>\r\n                  <FormLabel htmlFor=\"users\">USUARIOS</FormLabel>\r\n                  <CheckboxGroup colorScheme=\"brand\">\r\n                    <SimpleGrid minChildWidth=\"200px\" spacingY=\"20px\" spacingX=\"10px\">\r\n                      {users\r\n                        ? sortBy(users, ['name']).map((user, index) => (\r\n                            <Box key={index}>\r\n                              <Checkbox {...field} value={user.id} key={user.id}>\r\n                                {user.name}\r\n                              </Checkbox>\r\n                            </Box>\r\n                          ))\r\n                        : null}\r\n                    </SimpleGrid>\r\n                  </CheckboxGroup>\r\n                  <FormErrorMessage>{form.errors.users}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { database } from '../../firebase';\r\nimport { Heading, Box } from '@chakra-ui/react';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport AddForm from './AddForm';\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/projectlist',\r\n    title: 'Campañas',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Añadir',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst AddProject = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    database.users\r\n      .where('isActive', '==', true)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }));\r\n        setUsers(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Añadir campaña\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <AddForm users={users} />\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AddProject;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  FormHelperText,\r\n  CheckboxGroup,\r\n  Checkbox,\r\n} from '@chakra-ui/react';\r\nimport sortBy from 'lodash/sortBy';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport * as ROUTES from '../../constants/Routes';\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    name: yup.string().required('Por favor escribe el nombre de la campaña.'),\r\n    description: yup.string().required('Por favor escribe una breve descripción.'),\r\n    startDate: yup\r\n      .date()\r\n      .default(function () {\r\n        return moment().format('yyyy-MM-DD');\r\n      })\r\n      .required('Por favor escribe la fecha de inicio.'),\r\n    endDate: yup\r\n      .date()\r\n      .default(function () {\r\n        return moment().format('yyyy-MM-DD');\r\n      })\r\n      .required('Por favor escribe la fecha de finalización.'),\r\n    users: yup.array(),\r\n  })\r\n  .required();\r\n\r\nconst UpdateForm = ({ initialValues, users }) => {\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          database.projects\r\n            .doc(initialValues.id)\r\n            .update({\r\n              name: values.name,\r\n              description: values.description,\r\n              startDate: moment(values.startDate).toDate(),\r\n              endDate: moment(values.endDate).toDate(),\r\n              users: values.users,\r\n            })\r\n            .then(function (docRef) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Campaña modificada.',\r\n                description: 'Campaña modificada correctamente!',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              history.push(ROUTES.PROJECT_LIST);\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido modificar la campaña.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              setSubmitting(false);\r\n            });\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"name\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                  <FormLabel htmlFor=\"name\">NOMBRE</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Emt a l'escola\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"description\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  isInvalid={form.errors.description && form.touched.description}\r\n                  mt=\"20px\">\r\n                  <FormLabel htmlFor=\"description\">DESCRIPCION</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    variant=\"flushed\"\r\n                    placeholder=\"Descripción corta...\"\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                  />\r\n                  {form.errors.password ? (\r\n                    <FormErrorMessage>{form.errors.description}</FormErrorMessage>\r\n                  ) : (\r\n                    <FormHelperText>Descripción corta de la campaña.</FormHelperText>\r\n                  )}\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <SimpleGrid\r\n              columns={2}\r\n              minChildWidth={250}\r\n              spacingX=\"40px\"\r\n              spacingY=\"20px\"\r\n              mt=\"20px\">\r\n              <Box>\r\n                <Field name=\"startDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.startDate && form.touched.startDate}>\r\n                      <FormLabel htmlFor=\"startDate\">FECHA DE INICIO</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"EMT campaña\"\r\n                        type=\"date\"\r\n                        id=\"startDate\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.startDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"endDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.endDate && form.touched.endDate}>\r\n                      <FormLabel htmlFor=\"endDate\">FECHA DE FINALIZACIÓN</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"EMT campaña\"\r\n                        type=\"date\"\r\n                        id=\"endDate\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.endDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n            </SimpleGrid>\r\n            <Field name=\"users\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mt=\"20px\"\r\n                  isInvalid={form.errors.users && form.touched.users}>\r\n                  <FormLabel htmlFor=\"users\">USUARIOS</FormLabel>\r\n                  <CheckboxGroup defaultValue={initialValues.users} colorScheme=\"brand\">\r\n                    <SimpleGrid minChildWidth=\"200px\" spacingY=\"20px\" spacingX=\"10px\">\r\n                      {users\r\n                        ? sortBy(users, ['name']).map((user, index) => (\r\n                            <Box key={index}>\r\n                              <Checkbox {...field} value={user.id} key={user.id}>\r\n                                {user.name}\r\n                              </Checkbox>\r\n                            </Box>\r\n                          ))\r\n                        : null}\r\n                    </SimpleGrid>\r\n                  </CheckboxGroup>\r\n                  <FormErrorMessage>{form.errors.users}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Heading, Box } from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport UpdateForm from './UpdateForm';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/projectlist',\r\n    title: 'Campañas',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Actualizar',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst UpdateProject = () => {\r\n  const [project, setProject] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    database.projects\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        const data = {\r\n          id: doc.id,\r\n          users: doc.data().users ? doc.data().users : [],\r\n          name: doc.data().name,\r\n          description: doc.data().description,\r\n          startDate: moment(doc.data().startDate.toDate()).format('yyyy-MM-DD'),\r\n          endDate: moment(doc.data().endDate.toDate()).format('yyyy-MM-DD'),\r\n        };\r\n        setProject(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    database.users\r\n      .where('isActive', '==', true)\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }));\r\n        setUsers(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Actualizar campaña\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        {project && users.length > 0 && (\r\n          <UpdateForm initialValues={project} users={users} />\r\n        )}\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UpdateProject;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  SimpleGrid,\r\n  Link,\r\n  IconButton,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport sumBy from 'lodash/sumBy';\r\nimport { database } from '../../firebase';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons';\r\n\r\nimport { AiFillPieChart } from 'react-icons/ai';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport TableSearch from '../../components/TableSearch';\r\nimport CancelDialog from '../../components/CancelDialog';\r\nimport AddButton from '../../components/AddButton';\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Usuarios',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst UserList = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const [data, setData] = useState([]);\r\n  const cancelRef = React.useRef();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    return database.users.where('isActive', '==', true).onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n        style: {\r\n          maxWidth: '230px',\r\n        },\r\n      },\r\n      {\r\n        Header: 'Correo electrónico',\r\n        accessor: 'email',\r\n        style: {\r\n          maxWidth: '230px',\r\n        },\r\n      },\r\n      {\r\n        Header: 'Contratadas(h)',\r\n        accessor: 'hours',\r\n        isNumeric: true,\r\n      },\r\n      {\r\n        Header: 'Rol',\r\n        accessor: 'role',\r\n      },\r\n      {\r\n        Header: 'Actions',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <>\r\n            <Link\r\n              as={RouteLink}\r\n              to={`/userStats/${value}`}\r\n              style={{ textDecoration: 'none' }}>\r\n              <IconButton\r\n                colorScheme=\"purple\"\r\n                aria-label=\"Search database\"\r\n                size=\"sm\"\r\n                mr=\"4px\"\r\n                icon={<Icon as={AiFillPieChart} />}\r\n              />\r\n            </Link>\r\n            <Link\r\n              as={RouteLink}\r\n              to={`/updateUser/${value}`}\r\n              style={{ textDecoration: 'none' }}>\r\n              <IconButton\r\n                colorScheme=\"blue\"\r\n                aria-label=\"Search database\"\r\n                size=\"sm\"\r\n                mr=\"4px\"\r\n                icon={<EditIcon />}\r\n              />\r\n            </Link>\r\n            <IconButton\r\n              colorScheme=\"red\"\r\n              aria-label=\"Search database\"\r\n              size=\"sm\"\r\n              icon={<DeleteIcon />}\r\n              onClick={() => onOpenDialog(value)}\r\n            />\r\n          </>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const onOpenDialog = (id) => {\r\n    setCurrentId(id);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const onCloseDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    if (currentId) {\r\n      database.users\r\n        .doc(currentId)\r\n        .update({\r\n          isActive: false,\r\n        })\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Usuario eliminado.',\r\n            description: 'Usuario eliminado correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido eliminar el usuario.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Usuarios\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <AddButton route=\"/addUser\" text=\"Añadir usuario\" />\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total usuarios</StatLabel>\r\n              <StatNumber>{data ? data.length : null}</StatNumber>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total horas contratadas</StatLabel>\r\n              <StatNumber>{`${data ? sumBy(data, 'hours') : null}h`}</StatNumber>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <TableSearch data={data} columns={columns} />\r\n        <CancelDialog\r\n          isOpen={isOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={onCloseDialog}\r\n          onSubmit={handlerDelete}\r\n          header=\"Eliminar usuario\"\r\n          body=\"¿Estás seguro? No puede deshacer esta acción después.\"\r\n          type=\"delete\"\r\n        />\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  FormHelperText,\r\n  NumberInput,\r\n  NumberInputField,\r\n  InputRightElement,\r\n  InputGroup,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { database, authCreateUser } from '../../firebase';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport * as ROUTES from '../../constants/Routes';\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    name: yup.string().required('Por favor escribe el nombre del usuario.'),\r\n    email: yup\r\n      .string()\r\n      .email('El email no es válido.')\r\n      .required('Por favor escribe un email valido.'),\r\n    hours: yup\r\n      .number('Por favor escriba un numero.')\r\n      .required('Por favor escribe las horas contratadas.')\r\n      .positive('Por favor no entres numeros negativos.'),\r\n    createDate: yup.date().required('Por favor escribe la fecha de inicio.'),\r\n    password: yup.string().required('Por favor escribe la contraseña.'),\r\n    role: yup.string().required('Por favor selecciona un rol para el usuario.'),\r\n  })\r\n  .required();\r\n\r\nconst AddForm = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { signup } = useAuth();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          hours: 0,\r\n          createDate: moment().format('yyyy-MM-DD'),\r\n          role: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          signup(values.email, values.password)\r\n            .then(function (data) {\r\n              if (data) {\r\n                database.users\r\n                  .doc(data.user.uid)\r\n                  .set({\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    hours: values.hours,\r\n                    createDate: moment(values.createDate).toDate(),\r\n                    isActive: true,\r\n                    role: values.role,\r\n                  })\r\n                  .then(function (docRef) {\r\n                    toast({\r\n                      position: 'top',\r\n                      title: 'Usuario creado.',\r\n                      description: 'Usuario creado correctamente!',\r\n                      status: 'success',\r\n                      duration: 3000,\r\n                      isClosable: true,\r\n                    });\r\n                    authCreateUser\r\n                      .signOut()\r\n                      .then(function (docRef) {\r\n                        console.log('signOut - 2');\r\n                      })\r\n                      .catch(function (error) {\r\n                        console.log(error);\r\n                        setSubmitting(false);\r\n                      });\r\n                    history.push(ROUTES.USERS_LIST);\r\n                  })\r\n                  .catch(function (error) {\r\n                    toast({\r\n                      position: 'top',\r\n                      title: 'Ocurrió un error.',\r\n                      description: 'No se ha podido crear el usuario.',\r\n                      status: 'error',\r\n                      duration: 3000,\r\n                      isClosable: true,\r\n                    });\r\n                    setSubmitting(false);\r\n                  });\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido crear el usuario.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              console.log(error);\r\n              setSubmitting(false);\r\n            });\r\n          /* */\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <SimpleGrid minChildWidth=\"320px\" spacingX=\"40px\" spacingY=\"20px\">\r\n              <Box>\r\n                <Field name=\"name\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                      <FormLabel htmlFor=\"name\">NOMBRE</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"Técnico/a\"\r\n                        id=\"name\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"email\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.email && form.touched.email}>\r\n                      <FormLabel htmlFor=\"email\">EMAIL</FormLabel>\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"someone@example.com\"\r\n                        id=\"email\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n            </SimpleGrid>\r\n            <SimpleGrid\r\n              columns={3}\r\n              minChildWidth={250}\r\n              spacingX=\"40px\"\r\n              spacingY=\"20px\"\r\n              mt=\"20px\">\r\n              <Box>\r\n                <Field name=\"hours\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.hours && form.touched.hours}>\r\n                      <FormLabel htmlFor=\"hours\">HORAS CONTRATADAS</FormLabel>\r\n                      <NumberInput variant=\"flushed\">\r\n                        <NumberInputField {...field} type=\"number\" id=\"hours\" />\r\n                      </NumberInput>\r\n                      <FormErrorMessage>{form.errors.hours}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"createDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.createDate && form.touched.createDate}>\r\n                      <FormLabel htmlFor=\"createDate\">FECHA DE INICIO</FormLabel>\r\n                      <Input {...field} variant=\"flushed\" type=\"date\" id=\"createDate\" />\r\n                      <FormErrorMessage>{form.errors.createDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"role\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.role && form.touched.role}>\r\n                      <FormLabel htmlFor=\"type\">ROL</FormLabel>\r\n                      <Select\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        id=\"role\"\r\n                        placeholder=\"Selecciona un rol\">\r\n                        <option value=\"tecnico\">Tecnico</option>\r\n                        <option value=\"admin\">Administrador</option>\r\n                      </Select>\r\n                      {form.errors.role ? (\r\n                        <FormErrorMessage>{form.errors.role}</FormErrorMessage>\r\n                      ) : (\r\n                        <FormHelperText>Elija el tipo de rol del usuario.</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n            </SimpleGrid>\r\n            <Box>\r\n              <Field name=\"password\">\r\n                {({ field, form }) => (\r\n                  <FormControl\r\n                    mt=\"20px\"\r\n                    isInvalid={form.errors.password && form.touched.password}>\r\n                    <FormLabel htmlFor=\"password\">CONTRASEÑA</FormLabel>\r\n                    <InputGroup size=\"md\">\r\n                      <Input\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        placeholder=\"contraseñasegura1234\"\r\n                        type={show ? 'text' : 'password'}\r\n                        id=\"password\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                          {show ? <ViewOffIcon /> : <ViewIcon />}\r\n                        </Button>\r\n                      </InputRightElement>\r\n                    </InputGroup>\r\n                    {form.errors.password ? (\r\n                      <FormErrorMessage>{form.errors.password}</FormErrorMessage>\r\n                    ) : (\r\n                      <FormHelperText>Nunca comparta su contraseña.</FormHelperText>\r\n                    )}\r\n                  </FormControl>\r\n                )}\r\n              </Field>\r\n            </Box>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import { Heading, Box } from '@chakra-ui/react';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport AddForm from './AddForm';\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/users',\r\n    title: 'Usuarios',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Añadir',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst addUser = () => {\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Añadir usuario\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <AddForm />\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default addUser;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  SimpleGrid,\r\n  Box,\r\n  FormHelperText,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport * as ROUTES from '../../constants/Routes';\r\n\r\nconst LoginFormSchema = yup\r\n  .object({\r\n    name: yup.string().required('Por favor escribe el nombre del usuario.'),\r\n    hours: yup\r\n      .number('Por favor escriba un numero.')\r\n      .required('Por favor escribe las horas contratadas.')\r\n      .positive('Por favor no entres numeros negativos.'),\r\n    createDate: yup.date().required('Por favor escribe la fecha de inicio.'),\r\n    role: yup.string().required('Por favor selecciona un rol para el usuario.'),\r\n  })\r\n  .required();\r\n\r\nconst UpdateForm = ({ initialValues }) => {\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={LoginFormSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          database.users\r\n            .doc(initialValues.id)\r\n            .update({\r\n              name: values.name,\r\n              hours: values.hours,\r\n              createDate: moment(values.createDate).toDate(),\r\n              role: values.role,\r\n            })\r\n            .then(function (docRef) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Usuario modificado.',\r\n                description: 'Usuario modificado correctamente!',\r\n                status: 'success',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              history.push(ROUTES.USERS_LIST);\r\n            })\r\n            .catch(function (error) {\r\n              toast({\r\n                position: 'top',\r\n                title: 'Ocurrió un error.',\r\n                description: 'No se ha podido modificadar el usuario.',\r\n                status: 'error',\r\n                duration: 3000,\r\n                isClosable: true,\r\n              });\r\n              setSubmitting(false);\r\n            });\r\n        }}>\r\n        {(props) => (\r\n          <Form>\r\n            <Field name=\"name\">\r\n              {({ field, form }) => (\r\n                <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                  <FormLabel htmlFor=\"name\">NOMBRE</FormLabel>\r\n                  <Input {...field} variant=\"flushed\" placeholder=\"John Wick\" id=\"name\" />\r\n                  <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <SimpleGrid\r\n              columns={3}\r\n              minChildWidth={250}\r\n              spacingX=\"40px\"\r\n              spacingY=\"20px\"\r\n              mt=\"20px\">\r\n              <Box>\r\n                <Field name=\"hours\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.hours && form.touched.hours}>\r\n                      <FormLabel htmlFor=\"hours\">HORAS CONTRATADAS</FormLabel>\r\n                      <NumberInput variant=\"flushed\" defaultValue={initialValues.hours}>\r\n                        <NumberInputField {...field} type=\"number\" id=\"hours\" />\r\n                      </NumberInput>\r\n                      <FormErrorMessage>{form.errors.hours}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"createDate\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.createDate && form.touched.createDate}>\r\n                      <FormLabel htmlFor=\"createDate\">FECHA DE INICIO</FormLabel>\r\n                      <Input {...field} variant=\"flushed\" type=\"date\" id=\"createDate\" />\r\n                      <FormErrorMessage>{form.errors.createDate}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n              <Box>\r\n                <Field name=\"role\">\r\n                  {({ field, form }) => (\r\n                    <FormControl isInvalid={form.errors.role && form.touched.role}>\r\n                      <FormLabel htmlFor=\"type\">ROL</FormLabel>\r\n                      <Select\r\n                        {...field}\r\n                        variant=\"flushed\"\r\n                        id=\"role\"\r\n                        placeholder=\"Selecciona un rol\">\r\n                        <option value=\"tecnico\">Tecnico</option>\r\n                        <option value=\"admin\">Administrador</option>\r\n                      </Select>\r\n                      {form.errors.role ? (\r\n                        <FormErrorMessage>{form.errors.role}</FormErrorMessage>\r\n                      ) : (\r\n                        <FormHelperText>Elija el tipo de rol del usuario.</FormHelperText>\r\n                      )}\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n              </Box>\r\n            </SimpleGrid>\r\n            <Button\r\n              borderRadius=\"xl\"\r\n              boxShadow=\"xl\"\r\n              colorScheme=\"brand\"\r\n              size=\"lg\"\r\n              mt=\"35px\"\r\n              isFullWidth\r\n              isLoading={props.isSubmitting}\r\n              loadingText=\"Guardando\"\r\n              type=\"submit\">\r\n              Guardar\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Heading, Box } from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport UpdateForm from './UpdateForm';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/users',\r\n    title: 'Usuarios',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Añadir',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst UpdateUsers = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    database.users\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        const data = {\r\n          id: doc.id,\r\n          createDate: moment(doc.data().createDate.toDate()).format('yyyy-MM-DD'),\r\n          name: doc.data().name,\r\n          hours: doc.data().hours,\r\n          role: doc.data().role,\r\n        };\r\n        setUser(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Actualizar usuario\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <Box w=\"full\">{!loading && <UpdateForm initialValues={user} />}</Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UpdateUsers;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  SimpleGrid,\r\n  IconButton,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport sumBy from 'lodash/sumBy';\r\nimport filter from 'lodash/filter';\r\nimport { database } from '../../firebase';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport {\r\n  CheckIcon,\r\n  DeleteIcon,\r\n  SmallCloseIcon,\r\n  ExternalLinkIcon,\r\n} from '@chakra-ui/icons';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport CancelDialog from '../../components/CancelDialog';\r\nimport TableSearch from '../../components/TableSearch';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Horas',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst HourList = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenValide, setIsOpenValide] = useState(false);\r\n  const [isOpenInValide, setIsOpenInValide] = useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const [user, setUser] = useState();\r\n  const [data, setData] = useState([]);\r\n  const cancelRef = React.useRef();\r\n  const valideRef = React.useRef();\r\n  const invalideRef = React.useRef();\r\n  const toast = useToast();\r\n  const horasValidadas = data ? filter(data, { state: 'validado' }) : [];\r\n\r\n  useEffect(() => {\r\n    return database.hours\r\n      .where('date', '>=', moment().startOf('month').toDate())\r\n      .where('date', '<=', moment().endOf('month').toDate())\r\n      .orderBy('date', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          userId: doc.data().userId,\r\n          userName: doc.data().userName,\r\n          projectId: doc.data().projectId,\r\n          projectName: doc.data().projectName,\r\n          state: doc.data().state,\r\n          hours: doc.data().hours ? doc.data().hours : '',\r\n          type: doc.data().type ? doc.data().type : '',\r\n          date: moment(doc.data().date.toDate()).format('L H:mm:ss'),\r\n          dateEnd: doc.data().dateEnd\r\n            ? moment(doc.data().dateEnd.toDate()).format('L H:mm:ss')\r\n            : '',\r\n          contractHours: doc.data().contractHours,\r\n          latitude: doc.data().locationStart ? doc.data().locationStart.latitude : '',\r\n          longitude: doc.data().locationStart ? doc.data().locationStart.longitude : '',\r\n          latitudeEnd: doc.data().locationEnd ? doc.data().locationEnd.latitude : '',\r\n          longitudeEnd: doc.data().locationEnd ? doc.data().locationEnd.longitude : '',\r\n        }));\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Tecnico',\r\n        accessor: 'userName',\r\n      },\r\n      {\r\n        Header: 'Campaña',\r\n        accessor: 'projectName',\r\n      },\r\n      {\r\n        Header: 'Reg.Inicio',\r\n        accessor: 'date',\r\n      },\r\n      {\r\n        Header: 'Ubi.Inicio',\r\n        accessor: 'map',\r\n        Cell: ({ cell }) => (\r\n          <>\r\n            <Link\r\n              href={`https://www.google.com/maps/place/${cell.row.original.latitude},${cell.row.original.longitude}`}\r\n              isExternal>\r\n              <ExternalLinkIcon mx=\"2px\" />\r\n            </Link>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Reg.Final',\r\n        accessor: 'dateEnd',\r\n      },\r\n      {\r\n        Header: 'Ubi.Final',\r\n        accessor: 'mapFinal',\r\n        Cell: ({ cell }) => (\r\n          <>\r\n            {cell.row.original.latitudeEnd !== '' ? (\r\n              <Link\r\n                href={`https://www.google.com/maps/place/${cell.row.original.latitudeEnd},${cell.row.original.longitudeEnd}`}\r\n                isExternal>\r\n                <ExternalLinkIcon mx=\"2px\" />\r\n              </Link>\r\n            ) : null}\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Horas',\r\n        accessor: 'hours',\r\n        isNumeric: true,\r\n      },\r\n      {\r\n        Header: 'Tipo',\r\n        accessor: 'type',\r\n      },\r\n      {\r\n        Header: 'Validaciones',\r\n        accessor: 'state',\r\n        Cell: ({ value }) => <>{value === 'validado' ? 'Sí' : 'No'}</>,\r\n      },\r\n      {\r\n        Header: 'Acciones',\r\n        accessor: 'acciones',\r\n        Cell: ({ cell }) => (\r\n          <>\r\n            {cell.row.original.state === 'sin validar' && (\r\n              <>\r\n                <IconButton\r\n                  colorScheme=\"brand\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"4px\"\r\n                  icon={<CheckIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'validade')}\r\n                />\r\n                <IconButton\r\n                  colorScheme=\"red\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"16px\"\r\n                  icon={<SmallCloseIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'invalidade')}\r\n                />\r\n              </>\r\n            )}\r\n            {cell.row.original.state === 'validado' && (\r\n              <>\r\n                <IconButton\r\n                  colorScheme=\"brand\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"4px\"\r\n                  icon={<CheckIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'validade')}\r\n                  isDisabled\r\n                />\r\n                <IconButton\r\n                  colorScheme=\"red\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"16px\"\r\n                  icon={<SmallCloseIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'invalidade')}\r\n                />\r\n              </>\r\n            )}\r\n            {cell.row.original.state === 'denegado' && (\r\n              <>\r\n                <IconButton\r\n                  colorScheme=\"brand\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"4px\"\r\n                  icon={<CheckIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'validade')}\r\n                />\r\n                <IconButton\r\n                  colorScheme=\"red\"\r\n                  aria-label=\"Search database\"\r\n                  size=\"sm\"\r\n                  mr=\"16px\"\r\n                  icon={<SmallCloseIcon />}\r\n                  onClick={() => onOpenDialog(cell.row.original, 'invalidade')}\r\n                  isDisabled\r\n                />\r\n              </>\r\n            )}\r\n            <IconButton\r\n              colorScheme=\"red\"\r\n              aria-label=\"Search database\"\r\n              size=\"sm\"\r\n              icon={<DeleteIcon />}\r\n              onClick={() => onOpenDialog(cell.row.original, 'delete')}\r\n            />\r\n          </>\r\n        ),\r\n        style: {\r\n          whiteSpace: 'nowrap',\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const checkIsHighHours = (user) => {\r\n    const hoursUser = filter(data, { userId: user.userId, state: 'validado' });\r\n    const sumUser = sumBy(hoursUser, 'hours');\r\n    const sumTotal = sumUser + user.hours;\r\n    const highHours = user.contractHours * 1.2;\r\n    const isNotice = sumTotal > highHours ? true : false;\r\n    if (isNotice) {\r\n      database.notices\r\n        .add({\r\n          userId: user.userId,\r\n          userName: user.userName,\r\n          hours: sumTotal,\r\n          date: moment().toDate(),\r\n          contractHours: user.contractHours,\r\n        })\r\n        .then(function (docRef) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Exceso de horas.',\r\n            description: 'Se ha notificado un exceso de horas!',\r\n            status: 'warning',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onOpenDialog = (user, type) => {\r\n    setCurrentId(user.id);\r\n    if (type === 'delete') {\r\n      setIsOpen(true);\r\n    } else if (type === 'validade') {\r\n      setUser(user);\r\n      setIsOpenValide(true);\r\n    } else {\r\n      setIsOpenInValide(true);\r\n    }\r\n  };\r\n\r\n  const onCloseDialog = (type) => {\r\n    if (type === 'delete') {\r\n      setIsOpen(false);\r\n    } else if (type === 'validade') {\r\n      setIsOpenValide(false);\r\n    } else {\r\n      setIsOpenInValide(false);\r\n    }\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    if (currentId) {\r\n      database.hours\r\n        .doc(currentId)\r\n        .delete()\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Horas eliminadas.',\r\n            description: 'Horas eliminadas correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido eliminar las horas.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpen(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlerValid = () => {\r\n    if (currentId) {\r\n      database.hours\r\n        .doc(currentId)\r\n        .update({\r\n          state: 'validado',\r\n        })\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Horas validadas.',\r\n            description: 'Las horas han sido validadas correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpenValide(false);\r\n          checkIsHighHours(user);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido validar las horas.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpenValide(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handlerInValid = () => {\r\n    if (currentId) {\r\n      database.hours\r\n        .doc(currentId)\r\n        .update({\r\n          state: 'denegado',\r\n        })\r\n        .then(function () {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Horas denegadas.',\r\n            description: 'Las horas han sido denegadas correctamente!',\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpenInValide(false);\r\n        })\r\n        .catch(function (error) {\r\n          toast({\r\n            position: 'top',\r\n            title: 'Ocurrió un error.',\r\n            description: 'No se ha podido denegar las horas.',\r\n            status: 'error',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          setIsOpenInValide(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Horas\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total horas validadas</StatLabel>\r\n              <StatNumber>{`${\r\n                data ? sumBy(horasValidadas, 'hours') : null\r\n              }h`}</StatNumber>\r\n              <StatHelpText>Último mes</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total imputaciones</StatLabel>\r\n              <StatNumber>{data ? data.length : null}</StatNumber>\r\n              <StatHelpText>Último mes</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <TableSearch data={data} columns={columns} overflow={true} />\r\n        <CancelDialog\r\n          isOpen={isOpen}\r\n          cancelRef={cancelRef}\r\n          onClose={() => onCloseDialog('delete')}\r\n          onSubmit={handlerDelete}\r\n          header=\"Eliminar horas\"\r\n          body=\"¿Estás seguro? No puede deshacer esta acción después.\"\r\n          type=\"delete\"\r\n        />\r\n        <CancelDialog\r\n          isOpen={isOpenValide}\r\n          cancelRef={valideRef}\r\n          onClose={() => onCloseDialog('validade')}\r\n          onSubmit={handlerValid}\r\n          header=\"Validar horas\"\r\n          body=\"¿Estás seguro que quieres validar las horas realizas?\"\r\n          type=\"valide\"\r\n        />\r\n        <CancelDialog\r\n          isOpen={isOpenInValide}\r\n          cancelRef={invalideRef}\r\n          onClose={() => onCloseDialog('invalidade')}\r\n          onSubmit={handlerInValid}\r\n          header=\"Denegar horas\"\r\n          body=\"¿Estás seguro que quieres denegar las horas realizas?\"\r\n          type=\"invalide\"\r\n        />\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HourList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Heading, Box, SkeletonText } from '@chakra-ui/react';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport ProjectInfo from '../../components/ProjectInfo';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Campañas',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst Stats = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    database.projects\r\n      .orderBy('startDate', 'desc')\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          startDate: doc.data().startDate,\r\n          endDate: doc.data().endDate,\r\n          description: doc.data().description,\r\n          name: doc.data().name,\r\n          users: doc.data().users,\r\n        }));\r\n        setProjects(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Campañas\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        {!loading ? (\r\n          projects.map((project, index) => (\r\n            <ProjectInfo\r\n              state={\r\n                moment().toDate() >= moment(project.startDate.toDate()) &&\r\n                moment().toDate() <= moment(project.endDate.toDate())\r\n                  ? 'En activo'\r\n                  : 'Finalizado'\r\n              }\r\n              name={project.name}\r\n              description={project.description}\r\n              startDate={moment(project.startDate.toDate()).format('L')}\r\n              endDate={moment(project.endDate.toDate()).format('L')}\r\n              link=\"/infoStats\"\r\n              id={project.id}\r\n              key={index}\r\n            />\r\n          ))\r\n        ) : (\r\n          <>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n            <Box borderRadius=\"xl\" mb={4} p={4} cursor=\"pointer\" borderWidth=\"1px\">\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n              <SkeletonText mt=\"4\" noOfLines={1} spacing=\"4\" isLoaded={!loading} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useEffect, useState } from 'react';\r\nimport groupBy from 'lodash/groupBy';\r\nimport sumBy from 'lodash/sumBy';\r\nimport filter from 'lodash/filter';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  StatHelpText,\r\n  SimpleGrid,\r\n  Flex,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  Spinner,\r\n  Center,\r\n} from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/stats',\r\n    title: 'Campañas',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Estadísticas',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst InfoStats = () => {\r\n  const [hours, setHours] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    database.hours\r\n      .where('projectId', '==', id)\r\n      .where('state', '==', 'validado')\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setHours(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [id]);\r\n\r\n  const hoursToday = filter(hours, function (o) {\r\n    const dateDB = moment(o.date.toDate());\r\n    const dateToday = moment();\r\n    return dateDB.month() === dateToday.month() && dateDB.date() === dateToday.date();\r\n  });\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Estadísticas\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total campaña</StatLabel>\r\n              <StatNumber>{hours ? `${sumBy(hours, 'hours')}h` : '0h'}</StatNumber>\r\n              <StatHelpText>horas validadas</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Hoy</StatLabel>\r\n              <StatNumber>\r\n                {hoursToday ? `${sumBy(hoursToday, 'hours')}h` : '0h'}\r\n              </StatNumber>\r\n              <StatHelpText>horas validadas</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Heading as=\"h5\" size=\"md\" textAlign=\"left\" mt=\"35px\">\r\n          Técnicos\r\n        </Heading>\r\n        <Box mt=\"35px\">\r\n          {!loading ? (\r\n            Object.entries(groupBy(hours, 'userName')).map(([key, value], index) => (\r\n              <SimpleGrid\r\n                minChildWidth=\"120px\"\r\n                spacingY=\"20px\"\r\n                borderRadius=\"xl\"\r\n                mb={4}\r\n                p={4}\r\n                borderWidth=\"1px\"\r\n                key={index}>\r\n                <Box mr=\"35px\">\r\n                  <Stat>\r\n                    <StatLabel>Nombre tecnico</StatLabel>\r\n                    <StatNumber>{key}</StatNumber>\r\n                  </Stat>\r\n                </Box>\r\n                <Box mr=\"35px\">\r\n                  <Stat>\r\n                    <StatLabel>Horas validadas</StatLabel>\r\n                    <StatNumber>{`${sumBy(value, 'hours')}h`}</StatNumber>\r\n                  </Stat>\r\n                </Box>\r\n                <Flex flexDirection=\"row\" alignItems=\"center\">\r\n                  {Object.entries(groupBy(value, 'type')).map(([key, value], index) => (\r\n                    <Box mr=\"35px\" key={index}>\r\n                      <Stat>\r\n                        <StatLabel>{key}</StatLabel>\r\n                        <StatNumber>{`${sumBy(value, 'hours')}h`}</StatNumber>\r\n                      </Stat>\r\n                    </Box>\r\n                  ))}\r\n                </Flex>\r\n              </SimpleGrid>\r\n            ))\r\n          ) : (\r\n            <Center bg=\"white\" h=\"200px\" color=\"white\">\r\n              <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"brand.500\"\r\n                size=\"xl\"\r\n              />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default InfoStats;\r\n","import React, { useEffect, useState } from 'react';\r\nimport groupBy from 'lodash/groupBy';\r\nimport sumBy from 'lodash/sumBy';\r\nimport filter from 'lodash/filter';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  StatHelpText,\r\n  SimpleGrid,\r\n  Flex,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  Center,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { database } from '../../firebase';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nmoment.locale('es');\r\n\r\nconst breadcrumbs = [\r\n  {\r\n    href: '/home',\r\n    title: 'Home',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '/users',\r\n    title: 'Usuarios',\r\n    isCurrentPage: false,\r\n  },\r\n  {\r\n    href: '#',\r\n    title: 'Estadísticas',\r\n    isCurrentPage: true,\r\n  },\r\n];\r\n\r\nconst InfoStats = () => {\r\n  const [hours, setHours] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    database.hours\r\n      .where('userId', '==', id)\r\n      .where('state', '==', 'validado')\r\n      .where('date', '>=', moment().startOf('month').toDate())\r\n      .where('date', '<=', moment().endOf('month').toDate())\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setHours(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting documents: ', error);\r\n      });\r\n  }, [id]);\r\n\r\n  const hoursToday = filter(hours, function (o) {\r\n    const dateDB = moment(o.date.toDate());\r\n    const dateToday = moment();\r\n    return dateDB.month() === dateToday.month() && dateDB.date() === dateToday.date();\r\n  });\r\n\r\n  return (\r\n    <Layout justifyContent=\"normal\" isHeader={true}>\r\n      <Box w=\"full\" p=\"0px 35px 0px 35px\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"left\">\r\n          Estadísticas\r\n        </Heading>\r\n        <Breadcrumb breadcrumbs={breadcrumbs} />\r\n        <SimpleGrid minChildWidth=\"220px\" spacing=\"15px\" mb=\"30px\">\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Total horas</StatLabel>\r\n              <StatNumber>{hours ? `${sumBy(hours, 'hours')}h` : '0h'}</StatNumber>\r\n              <StatHelpText>Horas validadas este mes</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n          <Box borderRadius=\"xl\" mb={4} p={4} borderWidth=\"1px\">\r\n            <Stat>\r\n              <StatLabel>Hoy</StatLabel>\r\n              <StatNumber>\r\n                {hoursToday ? `${sumBy(hoursToday, 'hours')}h` : '0h'}\r\n              </StatNumber>\r\n              <StatHelpText>Horas validadas</StatHelpText>\r\n            </Stat>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Heading as=\"h5\" size=\"md\" textAlign=\"left\" mt=\"35px\">\r\n          Campañas\r\n        </Heading>\r\n        <Box mt=\"35px\">\r\n          {!loading ? (\r\n            Object.entries(groupBy(hours, 'projectName')).map(([key, value], index) => (\r\n              <SimpleGrid\r\n                minChildWidth=\"120px\"\r\n                spacingY=\"20px\"\r\n                borderRadius=\"xl\"\r\n                mb={4}\r\n                p={4}\r\n                borderWidth=\"1px\"\r\n                key={index}>\r\n                <Box mr=\"35px\">\r\n                  <Stat>\r\n                    <StatLabel>Nombre campaña</StatLabel>\r\n                    <StatNumber>{key}</StatNumber>\r\n                  </Stat>\r\n                </Box>\r\n                <Box mr=\"35px\">\r\n                  <Stat>\r\n                    <StatLabel>Horas validadas</StatLabel>\r\n                    <StatNumber>{`${sumBy(value, 'hours')}h`}</StatNumber>\r\n                  </Stat>\r\n                </Box>\r\n                <Flex flexDirection=\"row\" alignItems=\"center\">\r\n                  {Object.entries(groupBy(value, 'type')).map(([key, value], index) => (\r\n                    <Box mr=\"35px\" key={index}>\r\n                      <Stat>\r\n                        <StatLabel>{key}</StatLabel>\r\n                        <StatNumber>{`${sumBy(value, 'hours')}h`}</StatNumber>\r\n                      </Stat>\r\n                    </Box>\r\n                  ))}\r\n                </Flex>\r\n              </SimpleGrid>\r\n            ))\r\n          ) : (\r\n            <Center bg=\"white\" h=\"200px\" color=\"white\">\r\n              <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"brand.500\"\r\n                size=\"xl\"\r\n              />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default InfoStats;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { theme, Fonts } from './theme';\n\nimport { AuthProvider } from './context/AuthContext';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport DashboardPage from './screen/Dashboard';\nimport HomePage from './screen/Home';\nimport LoginPage from './screen/Login';\nimport HoursPage from './screen/WorkHours';\nimport AddHoursPage from './screen/AddHours';\nimport AddStartTimePage from './screen/AddStartTime';\nimport ProjectPage from './screen/Projects';\nimport ProjectListPage from './screen/ProjectList';\nimport AddProjectPage from './screen/AddProject';\nimport UpdateProjectPage from './screen/UpdateProject';\nimport UserListPage from './screen/UserList';\nimport AddUserPage from './screen/AddUser';\nimport UpdateUserPage from './screen/UpdateUsers';\nimport HourListPage from './screen/HourList';\nimport StatsPage from './screen/Stats';\nimport InfoStatsPage from './screen/InfoStats';\nimport UserStatsPage from './screen/UserStats';\n\nfunction App() {\n  var admin = ['admin'];\n  var tecnico = ['tecnico'];\n  var both = ['admin', 'tecnico'];\n  return (\n    <ChakraProvider theme={theme}>\n      <Fonts />\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/login\" component={LoginPage} />\n\n            {/* Authenticated */}\n            <PrivateRoute exact path=\"/\" roles={both} component={DashboardPage} />\n            <PrivateRoute path=\"/home\" roles={admin} component={HomePage} />\n            <PrivateRoute path=\"/projects\" roles={tecnico} component={ProjectPage} />\n            <PrivateRoute path=\"/projectList\" roles={admin} component={ProjectListPage} />\n            <PrivateRoute path=\"/addProject\" roles={admin} component={AddProjectPage} />\n            <PrivateRoute\n              path=\"/updateProject/:id\"\n              roles={admin}\n              component={UpdateProjectPage}\n            />\n            <PrivateRoute\n              path=\"/updateUser/:id\"\n              roles={admin}\n              component={UpdateUserPage}\n            />\n            <PrivateRoute path=\"/users\" roles={admin} component={UserListPage} />\n            <PrivateRoute path=\"/addUser\" roles={admin} component={AddUserPage} />\n            <PrivateRoute path=\"/hours/:id/:name\" roles={tecnico} component={HoursPage} />\n            <PrivateRoute path=\"/hourList\" roles={admin} component={HourListPage} />\n            <PrivateRoute\n              path=\"/addHours/:id/:name\"\n              roles={tecnico}\n              component={AddHoursPage}\n            />\n            <PrivateRoute\n              path=\"/workStart/:id/:name\"\n              roles={tecnico}\n              component={AddStartTimePage}\n            />\n            <PrivateRoute path=\"/stats\" roles={admin} component={StatsPage} />\n            <PrivateRoute path=\"/infoStats/:id\" roles={admin} component={InfoStatsPage} />\n            <PrivateRoute path=\"/userStats/:id\" roles={admin} component={UserStatsPage} />\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}